{"version":3,"sources":["components/task-form/task-form.module.css","components/header/header.module.css","redux/actions.js","redux/constants.js","components/task-form/task-form.js","hooks/use-form.js","components/task/task.js","redux/selectors.js","components/column/column.js","components/header/logo/logo.js","components/header/header.js","components/lists/lists.js","components/app/app.js","fixtures.js","redux/reducer/columnOrder.js","redux/reducer/columns.js","redux/reducer/tasks.js","redux/reducer/index.js","redux/store.js","redux/middleware/generateId.js","redux/middleware/logger.js","index.js"],"names":["module","exports","addTask","task","columnId","type","payload","generateId","changeTask","connect","dispatch","props","onSubmit","action","droggableId","def","resetFlag","initialValues","useState","values","setValues","setValue","key","value","onChange","ev","target","reset","handlers","Object","keys","reduce","acc","useForm","title","content","id","className","styles","taskForm","Form","preventDefault","Group","Control","placeholder","message","Button","variant","block","size","Container","styled","div","isDragging","mapStateToProps","createStructuredSelector","state","tasks","taskId","mapDispatchToProps","deleteTask","index","React","memo","column","edit","editable","draggableId","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Toast","onClick","onClose","Header","Body","e","stopPropagation","TaskList","isDraggingOver","columns","Col","Card","as","droppableId","droppableProps","taskIds","map","readOnly","Logo","color","header","Lists","onDragEnd","result","destination","source","home","foreign","changeTaskOut","changeTaskIn","changeColumn","this","direction","Row","columnOrder","PureComponent","start","end","columnStart","columnEnd","App","initialData","produce","draft","splice","push","console","log","combineReducers","enhancer","applyMiddleware","store","next","rest","uuid","createStore","reducer","composeWithDevTools","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cab88254.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskForm\":\"task-form_taskForm__1gREc\",\"taskFormItem\":\"task-form_taskFormItem__1GC_n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1AAQQ\"};","import {\n  CHANGE_COLUMN,\n  CHANGE_TASKIN,\n  CHANGE_TASKOUT,\n  DELETE_TASK,\n  ADD_TASK,\n  CHANGE_TASK,\n} from './constants';\n\nexport const changeColumn = (start, end, id) => ({\n  type: CHANGE_COLUMN,\n  payload: { start, end, id},\n});\nexport const changeTaskIn = (column, start, end, id) => ({\n  type: CHANGE_TASKIN,\n  payload: {column, start, end, id},\n});\nexport const changeTaskOut = (columnStart, columnEnd, start, end, id) => ({\n  type: CHANGE_TASKOUT,\n  payload: {columnStart,columnEnd, start, end, id},\n});\nexport const deleteTask = (id, index, columnId) => ({\n  type: DELETE_TASK,\n  payload: {id, columnId, index},\n});\nexport const addTask = (task, columnId) => ({\n  type: ADD_TASK,\n  payload: {task, columnId},\n  generateId: ['taskId'],\n});\nexport const changeTask = (task, columnId) => ({\n  type: CHANGE_TASK,\n  payload: {task, columnId},\n});\n","export const CHANGE_COLUMN = 'CHANGE_COLUMN';\nexport const CHANGE_TASKIN = 'CHANGE_TASKIN';\nexport const CHANGE_TASKOUT = 'CHANGE_TASKOUT';\nexport const DELETE_TASK = 'DELETE_TASK';\nexport const ADD_TASK = 'ADD_TASK';\nexport const CHANGE_TASK = 'CHANGE_TASK';","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useForm from '../../hooks/use-form';\nimport styles from './task-form.module.css';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\nconst TaskForm = ({ onSubmit , def, resetFlag }) => {\n\n\n  const { values, handlers, reset } = useForm({ title: def?.title ??\"\", content: def?.content ??\"\" , id: def?.id ??\"\"});\n\n  const handleSubmit = (ev) => {\n    ev.preventDefault();\n    onSubmit(values);\n    if(resetFlag)reset();\n  };\n\n  return (\n    <div className={styles.taskForm}>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n\n            <Form.Control\n                placeholder={def?.title ??\"Title\"  }\n                className={styles.message}\n                {...handlers.title}\n            />\n          <Form.Control\n              placeholder={def?.content ??\"Content\"}\n              className={styles.message}\n              {...handlers.content}\n          />\n            <Button type=\"submit\" variant=\"secondary\" block  size=\"sm\">\n              Add\n            </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\nTaskForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  def: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n  resetFlag: PropTypes.bool.isRequired,\n};\n\nexport default connect(null, (dispatch, props) => ({\n  onSubmit: (task) => dispatch(props.action(task, props.droggableId)),\n}))(TaskForm);\n","import { useState } from 'react';\n\nexport default (initialValues = {}) => {\n  const [values, setValues] = useState(initialValues);\n\n  const setValue = (key, value) => setValues({ ...values, [key]: value });\n\n  const onChange = (key) => (ev) =>\n    setValue(key, ev.target ? ev.target.value : ev);\n\n  return {\n    values,\n    reset: () => setValues(initialValues),\n    handlers: Object.keys(values).reduce(\n      (acc, key) => ({\n        ...acc,\n        [key]: { value: values[key], onChange: onChange(key) },\n      }),\n      {}\n    ),\n  };\n};\n","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport {deleteTask} from \"../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport TaskForm from \"../task-form\";\r\nimport {changeTask} from \"../../redux/actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {taskSelector} from \"../../redux/selectors\";\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst Container = styled.div`\r\n background-color: ${props => (props.isDragging ? 'rgb(56 132 208 / 0.5)' : 'rgb(157 119 224 / 0.5)')};\r\n transition: background-color 0.2s ease;\r\n`;\r\n\r\nconst  Task  = ({\r\n                    task,\r\n                    index,\r\n                    column,\r\n                    deleteTask,\r\n                }) => {\r\n    const [value, setValue] = useState({ edit: false, editable: false });\r\n\r\n\r\n    return (\r\n        <Draggable draggableId={task.id} index={index}>\r\n            {(provided, snapshot) => (\r\n                <Container\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={provided.innerRef}\r\n                    isDragging={snapshot.isDragging}\r\n                >\r\n                <>\r\n                    {!value.edit && !value.editable ? (\r\n                            <Toast onClick={() => {setValue({...value, edit: true })}} onClose={() => deleteTask(task.id, index, column)}>\r\n                                <Toast.Header>\r\n                                    <div className=\"mr-auto\">{task.title}</div>\r\n                                </Toast.Header>\r\n\r\n                            </Toast>\r\n                    ):null}\r\n\r\n                    {value.edit ? (\r\n                        <Toast onClick={() => {setValue({...value, edit: false })}} onClose={() => deleteTask(task.id, index, column)}>\r\n                            <Toast.Header>\r\n                                <div className=\"mr-auto\">{task.title}</div>\r\n                            </Toast.Header>\r\n                            <Toast.Body>\r\n                                <div className=\"mr-auto\">{task.content}</div>\r\n                                <Button size=\"sm\" variant=\"secondary\" onClick={(e) =>{e.stopPropagation(); setValue({...value, edit: false, editable: true})}}>Edit</Button>{' '}\r\n                            </Toast.Body>\r\n                        </Toast>\r\n                    ):null}\r\n                    {value.editable ? (\r\n                        <>\r\n                            <TaskForm def={task} action={changeTask} resetFlag={false}/>\r\n                            <Button block size=\"sm\" variant=\"secondary\" onClick={(e) => setValue({...value, edit: false, editable: false})}>Back</Button>\r\n                        </>\r\n                    ):null}\r\n                    </>\r\n                </Container>\r\n            )}\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nTask.propTypes = {\r\n    task: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        content: PropTypes.string.isRequired,\r\n        id: PropTypes.string.isRequired,\r\n    }),\r\n    index: PropTypes.number.isRequired,\r\n    column: PropTypes.string.isRequired,\r\n    deleteTask: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    task: taskSelector,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    deleteTask,\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(React.memo(Task));\r\n","import { createSelector } from 'reselect';\n\n\nexport const columnOrderSelector = (state) => state.columnOrder;\n\nexport const columnSelector = (state,props) => state.columns[props.columnId];\nexport const taskSelector = (state,props) => state.tasks[props.taskId];\n\n// export const finalColumnSelector = createSelector(\n//     tasksSelector,\n//     columnsSelector,\n//     columnOrderSelector,\n//     (tasks, columns, columnOrder) => {\n//        return columnOrder.map((columnId, index) => {\n//             console.log('update')\n//             const column = columns[columnId];\n//             const tasksMap = column.taskIds.map(taskId => tasks[taskId]);\n//             return {column,tasksMap};\n//         })\n// });","import React,{ useState } from 'react';\r\nimport Task from \"../task\";\r\nimport styled from 'styled-components';\r\nimport {Droppable, Draggable} from \"react-beautiful-dnd\";\r\nimport TaskForm from \"../task-form\";\r\nimport {addTask} from \"../../redux/actions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {createStructuredSelector} from \"reselect\";\r\nimport {columnSelector} from \"../../redux/selectors\";\r\nimport {connect} from \"react-redux\";\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst TaskList = styled.div`\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => (props.isDraggingOver ? 'lightyellow' : 'inherit')};\r\n  flex-grow: 1;\r\n  min-height: 100px;\r\n`;\r\n\r\n\r\n\r\nconst Column = ({\r\n                    column,\r\n                    index,\r\n                }) => {\r\n    const [value, setValue] = useState(false);\r\n    return (\r\n        <Draggable draggableId={column.id} index={index}>\r\n            {provided => (\r\n                <Col\r\n                    {...provided.draggableProps}\r\n                    ref={provided.innerRef}\r\n                ><Card>\r\n                    <Card.Header as=\"h5\" {...provided.dragHandleProps}>{column?.title}</Card.Header>\r\n                    <Droppable droppableId={column.id} type=\"task\">\r\n                        {(provided, snapshot) =>\r\n                            <TaskList\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}\r\n                                isDraggingOver={snapshot.isDraggingOver}\r\n                            >\r\n\r\n                                {column.taskIds.map((task, index) => (\r\n                                           <Task key={task} index={index} taskId={task} column={column.id} />))}\r\n                                {provided.placeholder}\r\n                            </TaskList>\r\n                        }\r\n                    </Droppable>\r\n\r\n                    {value ? (\r\n                        <>\r\n                            <TaskForm droggableId={column.id} action={addTask} resetFlag={true}/>\r\n                            <Button size=\"sm\" variant=\"secondary\" onClick={() => setValue(false)}>Close</Button>\r\n                        </>\r\n                    ) : (\r\n                        <Form.Control type=\"text\" placeholder=\"Add a card...\" readOnly  onClick={() => setValue(true)}/>\r\n                    )}\r\n                </Card>\r\n                </Col>\r\n            )}\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nColumn.propTypes = {\r\n    column: PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        taskIds: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n    }),\r\n    index: PropTypes.number.isRequired,\r\n};\r\nconst mapStateToProps = createStructuredSelector({\r\n    column: columnSelector,\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)( React.memo(Column));\r\n\r\n","import React from 'react';\n\nconst Logo = () => (\n   <h4 color={\"white\"} >SIMPLE TRELLO</h4>\n\n);\n\nexport default Logo;\n","import React from 'react';\n\nimport Logo from './logo';\nimport styles from './header.module.css';\n\nconst Header = () => (\n  <header className={styles.header}>\n    <Logo />\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport Column from \"../column\";\r\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\r\nimport PropTypes from \"prop-types\";\r\nimport {changeColumn, changeTaskIn, changeTaskOut} from \"../../redux/actions\";\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { columnOrderSelector } from '../../redux/selectors';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Header from \"../header\";\r\n\r\nclass Lists extends React.PureComponent {\r\n    static propTypes = {\r\n        columnOrder: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n    };\r\n\r\n\r\n    onDragEnd = result => {\r\n        const {destination, source, draggableId,type } = result;\r\n\r\n        if(!destination) {\r\n            return;\r\n        }\r\n\r\n        if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n            return;\r\n        }\r\n\r\n        if(type === 'column') {\r\n            this.props.changeColumn(source.index,destination.index,draggableId);\r\n            return\r\n        }\r\n        const home= source.droppableId;\r\n        const foreign= destination.droppableId;\r\n        if (home === foreign) {\r\n            this.props.changeTaskIn(source.droppableId,source.index,destination.index,draggableId);\r\n            return ;\r\n        }\r\n        if (home !== foreign) {\r\n            this.props.changeTaskOut(source.droppableId,destination.droppableId,source.index,destination.index,draggableId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <Droppable\r\n                    droppableId=\"all-columns\"\r\n                    direction=\"horizontal\"\r\n                    type=\"column\"\r\n                >\r\n                    {provided => (\r\n                        <Container\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n                            <Header></Header>\r\n                            <Row>\r\n                            {this.props.columnOrder.map((column, index) => {\r\n                                return  <Column key={column} columnId={column} index={index}/>;\r\n                            })}\r\n\r\n                            {provided.placeholder}\r\n                        </Row>\r\n                        </Container>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = createStructuredSelector({\r\n    columnOrder: columnOrderSelector,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    changeColumn,\r\n    changeTaskIn,\r\n    changeTaskOut,\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Lists);\r\n","import React from 'react';\nimport Lists from '../lists'\n\nconst App = () => {\n\n  return (\n      <div>\n        <Lists/>\n      </div>\n  );\n};\n\nexport default App;\n","const initialData = {\r\n    tasks: {\r\n        'task-1': { id: 'task-1', content: 'task-1-content',title:'task-1-title' },\r\n        'task-2': { id: 'task-2', content: 'task-2-content', title:'task-2-title'},\r\n        'task-3': { id: 'task-3', content: 'task-3-content', title:'task-3-title' },\r\n        'task-4': { id: 'task-4', content: 'task-4-content', title:'task-4-title' },\r\n        'task-5': { id: 'task-5', content: 'task-5-content', title:'task-5-title' },\r\n        'task-6': { id: 'task-6', content: 'task-6-content', title:'task-6-title' },\r\n        'task-7': { id: 'task-7', content: 'task-7-content', title:'task-7-title' },\r\n        'task-8': { id: 'task-8', content: 'task-8-content', title:'task-8-title' },\r\n        'task-9': { id: 'task-9', content: 'task-9-content', title:'task-9-title' },\r\n        'task-10': { id: 'task-10', content: 'task-10-content', title:'task-10-title' },\r\n        'task-11': { id: 'task-11', content: 'task-11-content', title:'task-11-title' },\r\n        'task-12': { id: 'task-12', content: 'task-12-content', title:'task-12-title' },\r\n        'task-13': { id: 'task-13', content: 'task-13-content', title:'task-13-title' },\r\n        'task-14': { id: 'task-14', content: 'task-14-content', title:'task-14-title' },\r\n        'task-15': { id: 'task-15', content: 'task-15-content', title:'task-15-title' },\r\n        'task-16': { id: 'task-16', content: 'task-16-content', title:'task-16-title' },\r\n    },\r\n    columns: {\r\n        'column-1': {\r\n            id: 'column-1',\r\n            title: 'Backlog',\r\n            taskIds: ['task-1', 'task-2', 'task-3', 'task-4'],\r\n        },\r\n        'column-2': {\r\n            id: 'column-2',\r\n            title: 'ToDo',\r\n            taskIds: ['task-5', 'task-6', 'task-7', 'task-8'],\r\n        },\r\n        'column-3': {\r\n            id: 'column-3',\r\n            title: 'InProgress',\r\n            taskIds: ['task-9', 'task-10', 'task-11', 'task-12'],\r\n        },\r\n        'column-4': {\r\n            id: 'column-4',\r\n            title: 'Done',\r\n            taskIds: ['task-13', 'task-14', 'task-15', 'task-16'],\r\n        }\r\n    },\r\n    // Facilitate reordering of the columns\r\n    columnOrder: [ 'column-1','column-2','column-3','column-4']\r\n};\r\n\r\nexport default initialData;","import produce from 'immer';\nimport initialData from \"../../fixtures\";\nimport { CHANGE_COLUMN } from '../constants';\n\n\nexport default produce((draft = initialData.columnOrder , action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CHANGE_COLUMN: {\n      draft.splice(payload.start, 1);\n      draft.splice(payload.end, 0, payload.id);\n      break;\n    }\n    default:\n      return draft;\n  }\n});\n","import produce from 'immer';\nimport initialData from \"../../fixtures\";\nimport {ADD_TASK, CHANGE_TASKIN, CHANGE_TASKOUT, DELETE_TASK} from '../constants';\n\nexport default produce((draft = initialData.columns , action) => {\n  const { type, payload, taskId} = action;\n\n  switch (type) {\n    case CHANGE_TASKIN: {\n      draft[payload.column].taskIds.splice(payload.start, 1);\n      draft[payload.column].taskIds.splice(payload.end, 0, payload.id);\n      break;\n    }\n    case CHANGE_TASKOUT: {\n      draft[payload.columnStart].taskIds.splice(payload.start, 1);\n      draft[payload.columnEnd].taskIds.splice(payload.end, 0, payload.id);\n      break;\n    }\n    case DELETE_TASK: {\n      draft[payload.columnId].taskIds.splice(payload.index, 1);\n      break;\n    }\n    case ADD_TASK: {\n      draft[payload.columnId].taskIds.push(taskId);\n      break;\n    }\n    default:\n      return draft;\n  }\n});\n","import produce from 'immer';\nimport initialData from \"../../fixtures\";\nimport {DELETE_TASK,ADD_TASK,CHANGE_TASK} from '../constants';\n\nexport default produce((draft = initialData.tasks , action) => {\n  const { type, payload, taskId} = action;\n  console.log(\"reducer\",type )\n  switch (type) {\n    case DELETE_TASK: {\n      delete draft[payload.id];\n      break;\n    }\n    case ADD_TASK: {\n      draft[taskId]=payload.task;\n      draft[taskId].id=taskId;\n      break;\n    }\n    case CHANGE_TASK: {\n      draft[payload.task.id]=payload.task;\n      break;\n    }\n    default:\n      return draft;\n  }\n});\n","import { combineReducers } from 'redux';\n\nimport columnOrder from './columnOrder';\nimport columns from \"./columns\";\nimport tasks from \"./tasks\";\n\nexport default combineReducers({\n  columnOrder,\n  columns,\n  tasks,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducer';\nimport logger from './middleware/logger';\nimport generateId from \"./middleware/generateId\";\n\nconst enhancer = applyMiddleware(\n    generateId,\n    logger\n);\n\nexport default createStore(reducer, composeWithDevTools(enhancer));\n","import { v4 as uuid } from 'uuid';\n\nexport default (store) => (next) => (action) => {\n  if (!action.generateId) return next(action);\n\n  const { generateId, ...rest } = action;\n  next({\n    ...rest,\n    ...generateId.reduce((acc, key) => ({ ...acc, [key]: uuid() }), {}),\n  });\n};\n","export default (store) => (next) => (action) => {\n  // console.log('before :', store.getState());\n  // console.log('action :', action);\n  next(action);\n  // console.log('after :', store.getState());\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\n\nimport App from './components/app';\n\nimport store from './redux/store';\n\n// DEV\nwindow.store = store;\n\nReactDOM.render(\n    <Provider store={store}>\n                <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}